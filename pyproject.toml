[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "nonebot-plugin-tarina-lang-turbo"
version = "0.1.1"
description = "Enhance tarina.lang to support user-level configuration"
readme = "README.md"
license = { text = "MIT" }

authors = [ { name = "shoucandanghehe", email = "wallfjjd@gmail.com" } ]
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "msgspec>=0.18.6",
    "nonebot-plugin-alconna>=0.52.2",
    "nonebot-plugin-localstore>=0.7.1",
    "nonebot-plugin-session>=0.3.2",
    "nonebot2>=2.3.3",
    "tarina>=0.5.8",
]

[tool.ruff]
target-version = "py39"
line-length = 120
format.quote-style = "single"
lint.select = [
    "A",     # flake8-builtins
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "C90",   # mccabe
    "COM",   # flake8-commas
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle errors
    "EM",    # flake8-errmsg
    "ERA",   # eradicate
    "F",     # pyflakes
    "FA",    # flake8-future-annotations
    "FAST",  # FastAPI
    "FBT",   # flake8-boolean-trap
    "FLY",   # flynt
    "FURB",  # refurb
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "ISC",   # flake8-implicit-str-concat
    "N",     # PEP8-naming
    "PD",    # pandas-vet
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "PIE",   # flake8-pie
    "PL",    # pylint
    "PTH",   # flake8-use-pathlib
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "RUF",   # Ruff-specific rules
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "TCH",   # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle warnings
    "YTT",   # flake8-2020
]
lint.ignore = [
    "ANN101", # 由 type checker 自动推断
    "ANN102", # 由 type checker 自动推断
    "ANN202", # 向 NoneBot 注册的函数
    "COM812", # 强制尾随逗号
    "E501",   # 过长的行由 ruff format 处理, 剩余的都是字符串
    "ISC001", # format warning
    "TID252", # 相对导入
    "TRY003",
]
lint.flake8-annotations.mypy-init-return = true
lint.flake8-builtins.builtins-ignorelist = [ "id" ]
lint.flake8-quotes = { inline-quotes = 'single', multiline-quotes = 'double' }

[tool.pyproject-fmt]
column_width = 120
indent = 4
max_supported_python = "3.12"

[tool.uv]
dev-dependencies = [
    "basedpyright>=1.17.2",
    "mypy>=1.11.2",
    "nonebot-adapter-onebot>=2.4.4",
    "nonebot-plugin-orm[default]>=0.7.6",
    "nonebot2[all]>=2.3.3",
    "objprint>=0.2.3",
    "pyproject-fmt>=2.2.3",
    "ruff>=0.6.4",
]

[tool.basedpyright]
pythonVersion = "3.9"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
typeCheckingMode = "standard"

[tool.nonebot]
plugins = [ 'nonebot_plugin_tarina_lang_turbo' ]
adapters = [
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" },
]
